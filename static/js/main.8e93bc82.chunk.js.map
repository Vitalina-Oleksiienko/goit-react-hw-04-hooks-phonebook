{"version":3,"sources":["components/contacts.module.css","components/Form.js","components/ContactList.js","components/Filter.js","App.js","index.js"],"names":["module","exports","Form","handleSubmit","useState","name","setName","number","setNumber","inputNameId","uuidv4","inputNumberId","handleChangeInput","e","target","value","className","style","form","onSubmit","preventDefault","htmlFor","input","id","autoComplete","type","pattern","title","required","onChange","btn","ContactList","contacts","handleDelete","list","map","el","listItem","btnDelete","onClick","Filter","handleChange","label","App","contact","localStorage","getItem","JSON","parse","setContacts","filter","setFilter","useEffect","setItem","stringify","find","alert","prev","regExp","RegExp","toLowerCase","array","split","i","length","match","elem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e93bc82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"contacts_title__1ZGof\",\"form\":\"contacts_form__ciK9C\",\"input\":\"contacts_input__30a8U\",\"btn\":\"contacts_btn__ZWaOU\",\"btnDelete\":\"contacts_btnDelete__cUo8I\",\"list\":\"contacts_list__1xuza\",\"label\":\"contacts_label__2tXwM\"};","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./contacts.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function Form({ handleSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState('');\n\n  const inputNameId = uuidv4();\n  const inputNumberId = uuidv4();\n  \n  const handleChangeInput = (e) => {\n   if (e.target.name === 'name') {\n      setName(e.target.value);\n    } else if (e.target.name === 'number') {\n      setNumber(e.target.value);\n    }\n  };\n\n    return (\n      <>\n        <form\n          className={style.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit(name, number);\n            setName('');\n            setNumber('');\n          }}\n        >\n          <label htmlFor={inputNameId}>Name</label>\n          <input\n            className={style.input}\n            id={inputNameId}\n            value={name}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChangeInput}\n          />\n          <label htmlFor={inputNumberId}>Number</label>\n          <input\n            className={style.input}\n            id={inputNumberId}\n            value={number}\n            autoComplete=\"off\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChangeInput}\n          />\n          <button type=\"submit\" className={style.btn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n\n\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./contacts.module.css\";\n\nexport default function ContactList({ contacts, handleDelete }) {\n    return (\n      <ul className={style.list}>\n        {contacts.map((el) => (\n          <li className={style.listItem} key={el.id}>\n            {el.name}: {el.number}\n            <button\n              type=\"button\"\n              className={style.btnDelete}\n              id={el.id}\n              onClick={handleDelete}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./contacts.module.css\";\n\n export default function Filter ({handleChange}) {\n  return (\n      <>\n        <label htmlFor=\"find\" className={style.label}>\n          Find contacts by name\n        </label>\n        <input\n          className={style.input}\n          autoComplete=\"off\"\n          id=\"find\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]\"\n          onChange={(e) => {\n            e.preventDefault();\n            handleChange(e);\n          }}\n        ></input>\n      </>\n    );\n  }\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./components/contacts.module.css\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    const contact = localStorage.getItem(\"contacts\");\n    if (contact) {\n      return JSON.parse(contact);\n    }\n    else { return [];}\n  });\n  const [filter, setFilter] = useState([]);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmit = (name, number) => {\n    if (!contacts.find((el) => el.name === name)) {\n      setContacts(prev => [...prev, { name, number, id: uuidv4() }]);\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  const handleChange = (e) => {\n    const regExp = new RegExp(`^${e.target.value.toLowerCase()}`);\n    setFilter(regExp);\n  };\n\n  const handleFilter = () => {\n    return contacts.filter((el) => {\n      const array = el.name.toLowerCase().split(\" \");\n\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].toLowerCase().match(filter) !== null) {\n          return true;\n        }\n      }\n      return false;\n    });\n  };\n\n  const handleDelete = (e) => {\n    setContacts(prev => prev.filter((elem) => elem.id !== e.target.id));\n  };\n\n  return (\n      <div className=\"App\">\n        <h1 className={style.title}>Phonebook</h1>\n        <Form handleSubmit={handleSubmit} />\n\n        <h2 className={style.title}>Contacts</h2>\n        <Filter handleChange={handleChange} />\n        <ContactList\n          contacts={handleFilter()}\n          handleDelete={handleDelete}\n        />\n      </div>\n    );\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}